from aiogram import Dispatcher, types, executor, Bot
from aiogram.types.input_file import InputFile
from config import load_config
from data import dataXlsx, data_by_trek, prepare_data #, data_to_notifications
from connect_psql import user_exists, add_subscriber, update_subscription, subscriber_status, \
    get_lan, add_lan, update_lan, delete_admin, check_admin, create_admin, upload_table, gx_search_sql, trek_search_sql
import keyboards as kb
import asyncio
import logging

from decouple import config


logging.basicConfig(level=logging.INFO)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–æ—Ç—É
token = config("Token")
bot = Bot(token=token)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply('–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫!', reply_markup=kb.greet_kb)


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message_handler(commands=['KGZüá∞üá¨', 'RUüá∑üá∫'])
async def lan(message: types.Message):
    if check_admin(message.from_user.id):
        if message.text == '/KGZüá∞üá¨':
            if not get_lan(message.from_user.id):
                add_lan(message.from_user.id, 'kgz')
            else:
                update_lan(message.from_user.id, 'kgz')
            await message.answer(text='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –∞–¥–º–∏–Ω–æ–≤ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π '
                                      '/add_admin id '
                                      '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π '
                                      '/remove_admin id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å id –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ '
                                      '@getmyid_bot\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª\n–î–ª—è '
                                      '–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è '
                                      '–≤–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤–≤–µ–¥–∏—Ç–µ /info –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π '
                                      '–Ω–æ–º–µ—Ä\n–°—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ GX-0000!!!\n–ò–ª–∏ –∂–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π '
                                      '/info_trek –≤–∞—à —Ç—Ä–µ–∫\n–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ '
                                      '—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /subscribe GX-0000 –∏ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /unsubscribe '
                                      'GX-0000',
                                 reply_markup=kb.blank_kb)
        elif message.text == '/RUüá∑üá∫':
            if not get_lan(message.from_user.id):
                add_lan(message.from_user.id, 'ru')
            else:
                update_lan(message.from_user.id, 'ru')
            await message.answer(text='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –∞–¥–º–∏–Ω–æ–≤ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π '
                                      '/add_admin id '
                                      '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π '
                                      '/remove_admin id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å id –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ '
                                      '@getmyid_bot\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª\n–î–ª—è '
                                      '–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è '
                                      '–≤–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤–≤–µ–¥–∏—Ç–µ /info –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π '
                                      '–Ω–æ–º–µ—Ä\n–°—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ GX-0000!!!\n–ò–ª–∏ –∂–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π '
                                      '/info_trek –≤–∞—à —Ç—Ä–µ–∫\n–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ '
                                      '—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /subscribe GX-0000 –∏ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /unsubscribe '
                                      'GX-0000',
                                 reply_markup=kb.blank_kb)

    else:
        if message.text == '/KGZüá∞üá¨':
            if not get_lan(message.from_user.id):
                add_lan(message.from_user.id, 'kgz')
            else:
                update_lan(message.from_user.id, 'kgz')
            await message.answer(text='–°–∞–ª–∞–º–∞—Ç—Å—ã–∑–±—ã!\n–¢–æ–≤–∞—Ä–ª–∞—Ä—ã“£—ã–∑–¥—ã –∫”©–∑”©–º”©–ª–¥”©”© “Ø—á“Ø–Ω –∂–∞–∑—ã“£—ã–∑ /info —Å–∏–∑–¥–∏–Ω –∂–µ–∫–µ '
                                      '–Ω–æ–º–µ—Ä–∏“£–∏–∑\n–ö–∞—Ç—É—É —Ñ–æ—Ä–º–∞—Ç—Ç–∞ –±–æ–ª—É—à –∫–µ—Ä–µ–∫ GX-0000!!!\n–ñ–µ —Å–∏–∑ –±—É–π—Ä—É–∫—Ç—É –∫–æ–ª–¥–æ–Ω–æ '
                                      '–∞–ª–∞—Å—ã–∑ /info_trek —Å–∏–∑–¥–∏–Ω —Ç—Ä–µ–∫\n–≠–≥–µ—Ä –±—É—é–º—É“£—É–∑ –∂”©–Ω“Ø–Ω–¥”© '
                                      '—ç—Å–∫–µ—Ä—Ç–º–µ–ª–µ—Ä–¥–∏ –∞–ª–≥—ã“£—ã–∑ –∫–µ–ª—Å–µ, –∞–Ω–¥–∞ /subscribe GX-0000\n–ñ–∞–Ω–∞ /unsubscribe '
                                      'GX-0000 –∂–∞–∑—ã–ª—É—É–Ω—É —Ç–æ–∫—Ç–æ—Ç—É—É',
                                 reply_markup=kb.blank_kb)
        elif message.text == '/RUüá∑üá∫':
            if not get_lan(message.from_user.id):
                add_lan(message.from_user.id, 'ru')
            else:
                update_lan(message.from_user.id, 'ru')
            await message.answer(text='–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∞—à–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤–≤–µ–¥–∏—Ç–µ /info –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π '
                                      '–Ω–æ–º–µ—Ä\n–°—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ GX-0000!!!\n–ò–ª–∏ –∂–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π '
                                      '/info_trek –≤–∞—à —Ç—Ä–µ–∫\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å '
                                      '—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞—à–µ–º —Ç–æ–≤–∞—Ä, —Ç–æ /subscribe GX-0000\n–ò /unsubscribe GX-0000 —á—Ç–æ–±—ã '
                                      '–æ—Ç–ø–∏—Å–∞—Ç—å—Å—è',
                                 reply_markup=kb.blank_kb)


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ –¢—Ä–µ–∫-–∫–æ–¥—É
@dp.message_handler(commands='info_trek')
async def info_trek(message: types.Message):
    # RU
    trek = str(message.text[11:])
    if 'ru' in get_lan(message.from_user.id):
        try:
            await message.answer(text='–ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç–∫—É...')
            product = trek_search_sql(trek)


            """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
            await message.answer(text=prepare_data(product))
        except asyncio.exceptions.TimeoutError:
            await info_trek(message)

    # KGZ
    elif 'kgz' in get_lan(message.from_user.id):
        try:
            await message.answer(text='–ë–∏—Ä –º“Ø–Ω”©—Ç –∫“Ø—Ç”©”© —Ç—É—Ä—É“£—É–∑...')
            product = trek_search_sql(trek)

            """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
            await message.answer(text=prepare_data(product))
        except asyncio.exceptions.TimeoutError:
            await info_trek(message)


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–∏—Å–∫ –ø–æ GX –∫–æ–¥—É
@dp.message_handler(commands=['info'])
async def info(message: types.Message):
    # RU
    if 'ru' in get_lan(message.from_user.id):
        try:
            id = str(message.text[6:])
            await message.answer(text='–ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç–∫—É...')
            product = gx_search_sql(id)
            result = prepare_data(product)

            """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
            if type(result) is list:
                for i in result:
                    await message.answer(text=i)
            else:
                await message.answer(text=result)
        except asyncio.exceptions.TimeoutError:
            await info(message)
    # KGZ
    elif 'kgz' in get_lan(message.from_user.id):
        try:
            id = message.text[6:]
            await message.answer(text='–ë–∏—Ä –º“Ø–Ω”©—Ç –∫“Ø—Ç”©”© —Ç—É—Ä—É“£—É–∑...')
            product = gx_search_sql(id)
            result = prepare_data(product)

            """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
            if type(result) is list:
                for i in result:
                    await message.answer(text=i)
            else:
                await message.answer(text=result)
        except asyncio.exceptions.TimeoutError:
            await info(message)


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø–æ–¥–ø–∏—Å–∫–∏
@dp.message_handler(commands=['subscribe'])
async def subscribe(message):
    if 'ru' in get_lan(message.from_user.id):
        if len((str(message.text))) != 18:
            await message.answer('–ó–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ /subscribe GX-0000')
        gx = message.text[11:]
        if not user_exists(message.from_user.id, gx):
            """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
            add_subscriber(message.from_user.id, gx)
            await message.answer('–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!\n–ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –ø—Ä–∏–¥–µ—Ç, –≤—ã —Å—Ä–∞–∑—É –∂–µ –æ–± —ç—Ç–æ–º —É–∑–Ω–∞–µ—Ç–µ!')
        elif user_exists(message.from_user.id, gx) and not subscriber_status(message.from_user.id):
            """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"""
            update_subscription(message.from_user.id, True)
            await message.answer('–í—ã —Å–Ω–æ–≤–∞ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!\n–ï—Å–ª–∏ —Ç–æ–≤–∞—Ä –ø—Ä–∏–¥–µ—Ç, –≤—ã —Å—Ä–∞–∑—É –∂–µ –æ–± —ç—Ç–æ–º —É–∑–Ω–∞–µ—Ç–µ!')
        else:
            """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –∞–∫—Ç–∏–≤–µ–Ω"""
            await message.answer('–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã!')

    elif 'kgz' in get_lan(message.from_user.id):
        if len((str(message.text))) != 18:
            await message.answer('–ö–∞—Ç—É—É —Ñ–æ—Ä–º–∞—Ç—Ç–∞ –±–æ–ª—É—à –∫–µ—Ä–µ–∫ /subscribe GX-0000')
        gx = message.text[11:]
        if not user_exists(message.from_user.id, gx):
            """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
            add_subscriber(message.from_user.id, gx)
            await message.answer('–°–∏–∑ —ç—Å–∫–µ—Ä—Ç–º–µ–ª–µ—Ä–≥–µ –∂–∞–∑—ã–ª–¥—ã“£—ã–∑!\n–≠–≥–µ—Ä–¥–µ –ø—Ä–æ–¥—É–∫—Ç –∫–µ–ª—Å–µ, —Å–∏–∑ –±—É–ª –∂”©–Ω“Ø–Ω–¥”© –¥–∞—Ä–æ–æ –±–∏–ª–µ—Å–∏–∑!')
        elif user_exists(message.from_user.id, gx) and not subscriber_status(message.from_user.id):
            """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"""
            update_subscription(message.from_user.id, True)
            await message.answer('–°–∏–∑ —ç—Å–∫–µ—Ä—Ç–º–µ–ª–µ—Ä–≥–µ –∂–∞–∑—ã–ª–¥—ã“£—ã–∑ –∫–∞–π—Ç–∞!\n–≠–≥–µ—Ä–¥–µ –ø—Ä–æ–¥—É–∫—Ç –∫–µ–ª—Å–µ, —Å–∏–∑ –±—É–ª –∂”©–Ω“Ø–Ω–¥”© –¥–∞—Ä–æ–æ '
                                 '–±–∏–ª–µ—Å–∏–∑!')
        else:
            """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –∞–∫—Ç–∏–≤–µ–Ω"""
            await message.answer('–°–∏–∑ —ç—Å–∫–µ—Ä—Ç–º–µ–ª–µ—Ä–≥–µ —É–∂–µ –∂–∞–∑—ã–ª–¥—ã“£—ã–∑!')


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—é –ø–æ–¥–ø–∏—Å–∫–∏
@dp.message_handler(commands=['unsubscribe'])
async def unsubscribe(message):
    if 'ru' in get_lan(message.from_user.id):
        if len((str(message.text))) != 20:
            await message.answer('–ó–∞–ø—Ä–æ—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ /unsubscribe GX-0000')
        gx = message.text[13:]
        if user_exists(message.from_user.id, gx) and subscriber_status(message.from_user.id):
            """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –∞–∫—Ç–∏–≤–µ–Ω"""
            update_subscription(message.from_user.id, False)
            await message.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!')
        else:
            """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –æ–Ω –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"""
            await message.answer('–í—ã –∏ —Ç–∞–∫ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã!')

    elif 'kgz' in get_lan(message.from_user.id):
        if len((str(message.text))) != 20:
            await message.answer('–ö–∞—Ç—É—É —Ñ–æ—Ä–º–∞—Ç—Ç–∞ –±–æ–ª—É—à –∫–µ—Ä–µ–∫ /unsubscribe GX-0000')
        gx = message.text[13:]
        if user_exists(message.from_user.id, gx) and subscriber_status(message.from_user.id):
            """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –∞–∫—Ç–∏–≤–µ–Ω"""
            update_subscription(message.from_user.id, False)
            await message.answer('–≠—Å–∫–µ—Ä—Ç–º–µ–ª–µ—Ä–¥–∏ –∏–π–≥–∏–ª–∏–∫—Ç“Ø“Ø –∂–æ–∫–∫–æ —á—ã–≥–∞—Ä–¥—ã“£—ã–∑!')
        else:
            """–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –æ–Ω –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω"""
            await message.answer('–°–∏–∑ –∞–Ω—Å—ã–∑ –¥–µ–ª–µ –∂–∞–∑—ã–ª–±–∞–π—Å—ã–∑!')


# –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
@dp.message_handler(commands=['add_admin'])
async def add_admin(message):
    if check_admin(message.from_user.id):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞"""
        if len(message.text) < 11:
            await message.answer('–ù–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
        else:
            user_id = message.text[11:]
            if check_admin(user_id):
                """–ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∞–¥–º–∏–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
                await message.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ —Ç–∞–∫ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º!')
            else:
                """–î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∞"""
                create_admin(user_id)
                await message.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞!')
    else:
        await message.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')


# –£–¥–∞–ª—è–µ–º –∞–¥–º–∏–Ω–∞
@dp.message_handler(commands=['remove_admin'])
async def remove_admin(message):
    if check_admin(message.from_user.id):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞"""
        if len(message.text) < 14:
            await message.answer('–ù–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
        else:
            user_id = message.text[14:]
            if check_admin(user_id):
                """–ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∞–¥–º–∏–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —É–¥–∞–ª—è–µ–º –µ–≥–æ"""
                if str(user_id) == str(message.from_user.id):
                    """–ù–µ –¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–¥–∞–ª–∏—Ç—å —Å–µ–±—è"""
                    await message.answer('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–µ–±—è –∂–µ!')
                else:
                    delete_admin(user_id)
                    await message.answer('–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ –∞–¥–º–∏–Ω–∞')
            else:
                """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
                await message.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ —Ç–∞–∫ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º!')
    else:
        await message.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!')


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã
@dp.message_handler(content_types=['document'])
async def get_new_table(message):
    if check_admin(message.from_user.id):
        if 'ru' in get_lan(message.from_user.id):
            file = await bot.get_file(message.document.file_id)
            print('bobobo')
            # upload_table(file)
            # print(file.file_path)q
            # print(file.file_path + "/bot/")
            # await message.document.download(destination_dir="", destination_file="data.xlsx",)
            await bot.download_file(file.file_path, 'data.xlsx')
            upload_table('data.xlsx')
            await message.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–∏ –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É!')
        elif 'kgz' in get_lan(message.from_user.id):
            file = await bot.get_file(message.document.file_id)
            await bot.download_file(file.file_path, 'data.xlsx')
            upload_table('data.xlsx')
            await message.answer('–ñ–∞“£—ã —Ç–∞–±–ª–∏—Ü–∞–Ω—ã –∏–π–≥–∏–ª–∏–∫—Ç“Ø“Ø –∂“Ø–∫—Ç”©–¥“Ø“£“Ø–∑!')


# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
@dp.message_handler(commands=['send_sheet'])
async def send_sheet(message):
    if check_admin(message.from_user.id):
        with open('data.xlsx', 'rb') as f:
            file = InputFile(f)
            await message.answer('–ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç–∫—É...')
            await bot.send_document(chat_id=message.from_user.id, document=file.get_file())


# @dp.message_handler(commands=['info'])
# async def info(message: types.Message):
#     if get_lan(message.from_user.id) == 'ru':
#         id = str(message.text[6:])
#         if len(id) == 7 and id[:3] == 'GX-':
#             """–ü—Ä–∏–≤–æ–¥–∏–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∏–¥—ã GX –∫–æ–¥–∞"""
#             ex1 = id
#             ex2 = id[3:]
#             ex3 = id[4:]
#             ex4 = id[5:]

#             await message.answer(text='–ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç–∫—É...')
#             print('bebebe1')
#             info_loop = asyncio.get_event_loop()
#             # info_loop.create_task(clear(1))
#             info_loop.create_task(dataXlsx(ex1, ex2, ex3, ex4, 1))
#             await asyncio.sleep(15)
#             print('bebebe2')
#             # info_loop.run_until_complete(dataXlsx(ex1, ex2, ex3, ex4, 1))
#             # info_loop.close()
#             print('bebebe3')
#             # if dataXlsx(ex1, ex2, ex3, ex4) == 1:
#             #     await message.answer(text='–¢–æ–≤–∞—Ä–æ–≤ —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ—Ç!')
#             # else:
#             with open(f'–í–∞—à–∏_—Ç–æ–≤–∞—Ä—ã_{ex1}.xlsx', 'rb') as file:
#                 await message.answer_document(file)
#         elif len(id) == 4:
#             """–ü—Ä–∏–≤–æ–¥–∏–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∏–¥—ã GX –∫–æ–¥–∞"""
#             ex1 = 'GX-' + id
#             ex2 = id
#             ex3 = id[1:]
#             ex4 = id[2:]

#             await message.answer(text='–ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç–∫—É...')
#             print('bebebe1')
#             info_loop = asyncio.get_event_loop()
#             # info_loop.create_task(clear(1))
#             info_loop.create_task(dataXlsx(ex1, ex2, ex3, ex4, 1))
#             await asyncio.sleep(15)
#             print('bebebe2')
#             # info_loop.run_until_complete(dataXlsx(ex1, ex2, ex3, ex4, 1))
#             # info_loop.close()
#             print('bebebe3')
#             # if dataXlsx(ex1, ex2, ex3, ex4) == 1:
#             #     await message.answer(text='–¢–æ–≤–∞—Ä–æ–≤ —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ—Ç!')
#             # else:
#             with open(f'–í–∞—à–∏_—Ç–æ–≤–∞—Ä—ã_{ex1}.xlsx', 'rb') as file:
#                 await message.answer_document(file)
#         else:
#             await message.answer(text='–°—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä—Ç–º–∞—Ç–µ GX-0000 –∏–ª–∏ 0000!!!')

#     # KGZ
#     elif get_lan(message.from_user.id) == 'kgz':
#         id = message.text[6:]
#         if len(id) == 7 and id[:3] == 'GX-':
#             """–ü—Ä–∏–≤–æ–¥–∏–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∏–¥—ã GX –∫–æ–¥–∞"""
#             ex1 = id
#             ex2 = id[3:]
#             ex3 = id[4:]
#             ex4 = id[5:]

#             await message.answer(text='–ë–∏—Ä –º“Ø–Ω”©—Ç –∫“Ø—Ç”©”© —Ç—É—Ä—É“£—É–∑...')
#             print('bebebe1')
#             info_loop = asyncio.get_event_loop()
#             # info_loop.create_task(clear(1))
#             info_loop.create_task(dataXlsx(ex1, ex2, ex3, ex4, 1))
#             await asyncio.sleep(15)
#             print('bebebe2')
#             # info_loop.run_until_complete(dataXlsx(ex1, ex2, ex3, ex4, 1))
#             # info_loop.close()
#             print('bebebe3')
#             # if dataXlsx(ex1, ex2, ex3, ex4) == 1:
#             #     await message.answer(text='–ú—ã–Ω–¥–∞–π –∫–æ–¥—É –±–∞—Ä —Ç–æ–≤–∞—Ä–ª–∞—Ä –∂–æ–∫!')
#             # else:
#             with open(f'–í–∞—à–∏_—Ç–æ–≤–∞—Ä—ã_{ex1}.xlsx', 'rb') as file:
#                 await message.answer_document(file)
#         elif len(id) == 4:
#             """–ü—Ä–∏–≤–æ–¥–∏–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∏–¥—ã GX –∫–æ–¥–∞"""
#             ex1 = 'GX-' + id
#             ex2 = id
#             ex3 = id[1:]
#             ex4 = id[2:]

#             await message.answer(text='–ë–∏—Ä –º“Ø–Ω”©—Ç –∫“Ø—Ç”©”© —Ç—É—Ä—É“£—É–∑...')
#             print('bebebe1')
#             info_loop = asyncio.get_event_loop()
#             # info_loop.create_task(clear(1))
#             info_loop.create_task(dataXlsx(ex1, ex2, ex3, ex4, 1))
#             await asyncio.sleep(15)
#             print('bebebe2')
#             # info_loop.run_until_complete(dataXlsx(ex1, ex2, ex3, ex4, 1))
#             # info_loop.close()
#             print('bebebe3')
#             # if dataXlsx(ex1, ex2, ex3, ex4) == 1:
#             #     await message.answer(text='–¢–æ–≤–∞—Ä–æ–≤ —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ—Ç!')
#             # else:
#             with open(f'–í–∞—à–∏_—Ç–æ–≤–∞—Ä—ã_{ex1}.xlsx', 'rb') as file:
#                 await message.answer_document(file)
#         else:
#             await message.answer(text='–ö–∞—Ç—É—É —Ñ–æ—Ä–º–∞—Ç—Ç–∞ –±–æ–ª—É—à –∫–µ—Ä–µ–∫ GX-0000 –∂–µ 0000!!!')


if __name__ == '__main__':
    while True:
      try:
        executor.start_polling(dp)
      except Exception:
        pass
